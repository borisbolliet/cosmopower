{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red193\green101\blue28;\red46\green174\blue187;\red200\green20\blue201;
\red180\green36\blue25;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c80553\c47366\c13835;\cssrgb\c20196\c73240\c78250;\cssrgb\c83396\c23075\c82664;
\cssrgb\c76409\c21698\c12524;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww28980\viewh8600\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 \ul \ulc0 Environment variable to set the path to cosmopower 
\f1\b0 \ulnone \
\
\
It is useful to define an environment variable in order to set the path to the code.\
Here is how to do it:\
\
$ vim .bashrc\
\
Copy paste the following line into bashrc:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2\fs22 \cf2 \CocoaLigature0 export\cf3  PATH_TO_COSMOPOWER_DIR=\cf2 "\cf4 $HOME\cf5 /cosmopower\cf2 "\
\

\f1\fs24 \cf6 Then esc+:wq to save and quit the .\CocoaLigature1 bashrc file\
\
$ source .bashrc\
\
Now if you do:\
\
$ ls $PATH_TO_COSMOPOWER_DIR\
You should see the content of the code directory. \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
\

\f0\b \ul Generating the latin hypercube of parameters\

\f1\b0 \ulnone \
The first task is to generate the latin hyper cube (LHC)\
\
We use the script: cosmopower/cosmopower/training/spectra_generation_scripts/1_generate_lhc.py\
\
This script is run with a command as below:\
\
$ python $PATH_TO_COSMOPOWER_DIR/cosmopower/training/spectra_generation_scripts/1_generate_lhc.py -n_samples_per_process 20 -n_processes 4 -yaml_file $PATH_TO_COSMOPOWER_DIR/cosmopower/training/spectra_generation_scripts/yaml_files/ACTPol_lite_DR4_baseLCDM_taup_hip.yaml\
\
}